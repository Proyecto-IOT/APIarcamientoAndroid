// Generated by view binder compiler. Do not edit!
package com.example.apiarcamento.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.apiarcamento.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LottieAnimationView animationViewHome;

  @NonNull
  public final MaterialCardView btnHome1;

  @NonNull
  public final MaterialCardView btnHome2;

  @NonNull
  public final MaterialCardView btnHome3;

  @NonNull
  public final MaterialCardView btnHome4;

  @NonNull
  public final ConstraintLayout contenedorCard1;

  @NonNull
  public final ConstraintLayout contenedorCard2;

  @NonNull
  public final ConstraintLayout contenedorCard3;

  @NonNull
  public final ConstraintLayout contenedorCard4;

  @NonNull
  public final LinearLayout contenedordebtn1;

  @NonNull
  public final LinearLayout contenedordebtn2;

  @NonNull
  public final LinearLayout contenedordebtn3;

  @NonNull
  public final LinearLayout contenedordebtn4;

  @NonNull
  public final ImageView iconobtnAbrir;

  @NonNull
  public final ImageView iconobtnCerrar;

  @NonNull
  public final ImageView iconobtnEstacionamiento;

  @NonNull
  public final ImageView iconobtnIncidentes;

  @NonNull
  public final TextView textoBienvenida;

  private FragmentHomeBinding(@NonNull ScrollView rootView,
      @NonNull LottieAnimationView animationViewHome, @NonNull MaterialCardView btnHome1,
      @NonNull MaterialCardView btnHome2, @NonNull MaterialCardView btnHome3,
      @NonNull MaterialCardView btnHome4, @NonNull ConstraintLayout contenedorCard1,
      @NonNull ConstraintLayout contenedorCard2, @NonNull ConstraintLayout contenedorCard3,
      @NonNull ConstraintLayout contenedorCard4, @NonNull LinearLayout contenedordebtn1,
      @NonNull LinearLayout contenedordebtn2, @NonNull LinearLayout contenedordebtn3,
      @NonNull LinearLayout contenedordebtn4, @NonNull ImageView iconobtnAbrir,
      @NonNull ImageView iconobtnCerrar, @NonNull ImageView iconobtnEstacionamiento,
      @NonNull ImageView iconobtnIncidentes, @NonNull TextView textoBienvenida) {
    this.rootView = rootView;
    this.animationViewHome = animationViewHome;
    this.btnHome1 = btnHome1;
    this.btnHome2 = btnHome2;
    this.btnHome3 = btnHome3;
    this.btnHome4 = btnHome4;
    this.contenedorCard1 = contenedorCard1;
    this.contenedorCard2 = contenedorCard2;
    this.contenedorCard3 = contenedorCard3;
    this.contenedorCard4 = contenedorCard4;
    this.contenedordebtn1 = contenedordebtn1;
    this.contenedordebtn2 = contenedordebtn2;
    this.contenedordebtn3 = contenedordebtn3;
    this.contenedordebtn4 = contenedordebtn4;
    this.iconobtnAbrir = iconobtnAbrir;
    this.iconobtnCerrar = iconobtnCerrar;
    this.iconobtnEstacionamiento = iconobtnEstacionamiento;
    this.iconobtnIncidentes = iconobtnIncidentes;
    this.textoBienvenida = textoBienvenida;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationViewHome;
      LottieAnimationView animationViewHome = ViewBindings.findChildViewById(rootView, id);
      if (animationViewHome == null) {
        break missingId;
      }

      id = R.id.btnHome1;
      MaterialCardView btnHome1 = ViewBindings.findChildViewById(rootView, id);
      if (btnHome1 == null) {
        break missingId;
      }

      id = R.id.btnHome2;
      MaterialCardView btnHome2 = ViewBindings.findChildViewById(rootView, id);
      if (btnHome2 == null) {
        break missingId;
      }

      id = R.id.btnHome3;
      MaterialCardView btnHome3 = ViewBindings.findChildViewById(rootView, id);
      if (btnHome3 == null) {
        break missingId;
      }

      id = R.id.btnHome4;
      MaterialCardView btnHome4 = ViewBindings.findChildViewById(rootView, id);
      if (btnHome4 == null) {
        break missingId;
      }

      id = R.id.contenedorCard1;
      ConstraintLayout contenedorCard1 = ViewBindings.findChildViewById(rootView, id);
      if (contenedorCard1 == null) {
        break missingId;
      }

      id = R.id.contenedorCard2;
      ConstraintLayout contenedorCard2 = ViewBindings.findChildViewById(rootView, id);
      if (contenedorCard2 == null) {
        break missingId;
      }

      id = R.id.contenedorCard3;
      ConstraintLayout contenedorCard3 = ViewBindings.findChildViewById(rootView, id);
      if (contenedorCard3 == null) {
        break missingId;
      }

      id = R.id.contenedorCard4;
      ConstraintLayout contenedorCard4 = ViewBindings.findChildViewById(rootView, id);
      if (contenedorCard4 == null) {
        break missingId;
      }

      id = R.id.contenedordebtn1;
      LinearLayout contenedordebtn1 = ViewBindings.findChildViewById(rootView, id);
      if (contenedordebtn1 == null) {
        break missingId;
      }

      id = R.id.contenedordebtn2;
      LinearLayout contenedordebtn2 = ViewBindings.findChildViewById(rootView, id);
      if (contenedordebtn2 == null) {
        break missingId;
      }

      id = R.id.contenedordebtn3;
      LinearLayout contenedordebtn3 = ViewBindings.findChildViewById(rootView, id);
      if (contenedordebtn3 == null) {
        break missingId;
      }

      id = R.id.contenedordebtn4;
      LinearLayout contenedordebtn4 = ViewBindings.findChildViewById(rootView, id);
      if (contenedordebtn4 == null) {
        break missingId;
      }

      id = R.id.iconobtnAbrir;
      ImageView iconobtnAbrir = ViewBindings.findChildViewById(rootView, id);
      if (iconobtnAbrir == null) {
        break missingId;
      }

      id = R.id.iconobtnCerrar;
      ImageView iconobtnCerrar = ViewBindings.findChildViewById(rootView, id);
      if (iconobtnCerrar == null) {
        break missingId;
      }

      id = R.id.iconobtnEstacionamiento;
      ImageView iconobtnEstacionamiento = ViewBindings.findChildViewById(rootView, id);
      if (iconobtnEstacionamiento == null) {
        break missingId;
      }

      id = R.id.iconobtnIncidentes;
      ImageView iconobtnIncidentes = ViewBindings.findChildViewById(rootView, id);
      if (iconobtnIncidentes == null) {
        break missingId;
      }

      id = R.id.textoBienvenida;
      TextView textoBienvenida = ViewBindings.findChildViewById(rootView, id);
      if (textoBienvenida == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ScrollView) rootView, animationViewHome, btnHome1, btnHome2,
          btnHome3, btnHome4, contenedorCard1, contenedorCard2, contenedorCard3, contenedorCard4,
          contenedordebtn1, contenedordebtn2, contenedordebtn3, contenedordebtn4, iconobtnAbrir,
          iconobtnCerrar, iconobtnEstacionamiento, iconobtnIncidentes, textoBienvenida);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
