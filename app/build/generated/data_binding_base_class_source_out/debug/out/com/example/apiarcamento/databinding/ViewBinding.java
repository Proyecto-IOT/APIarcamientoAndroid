// Generated by view binder compiler. Do not edit!
package com.example.apiarcamento.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBindings;
import com.example.apiarcamento.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewBinding implements androidx.viewbinding.ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraint;

  @NonNull
  public final TextView tvColor;

  @NonNull
  public final TextView tvDelete;

  @NonNull
  public final TextView tvMarca;

  @NonNull
  public final TextView tvMatricula;

  @NonNull
  public final TextView tvModelo;

  private ViewBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout constraint,
      @NonNull TextView tvColor, @NonNull TextView tvDelete, @NonNull TextView tvMarca,
      @NonNull TextView tvMatricula, @NonNull TextView tvModelo) {
    this.rootView = rootView;
    this.constraint = constraint;
    this.tvColor = tvColor;
    this.tvDelete = tvDelete;
    this.tvMarca = tvMarca;
    this.tvMatricula = tvMatricula;
    this.tvModelo = tvModelo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout constraint = (ConstraintLayout) rootView;

      id = R.id.tvColor;
      TextView tvColor = ViewBindings.findChildViewById(rootView, id);
      if (tvColor == null) {
        break missingId;
      }

      id = R.id.tvDelete;
      TextView tvDelete = ViewBindings.findChildViewById(rootView, id);
      if (tvDelete == null) {
        break missingId;
      }

      id = R.id.tvMarca;
      TextView tvMarca = ViewBindings.findChildViewById(rootView, id);
      if (tvMarca == null) {
        break missingId;
      }

      id = R.id.tvMatricula;
      TextView tvMatricula = ViewBindings.findChildViewById(rootView, id);
      if (tvMatricula == null) {
        break missingId;
      }

      id = R.id.tvModelo;
      TextView tvModelo = ViewBindings.findChildViewById(rootView, id);
      if (tvModelo == null) {
        break missingId;
      }

      return new ViewBinding((ConstraintLayout) rootView, constraint, tvColor, tvDelete, tvMarca,
          tvMatricula, tvModelo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
